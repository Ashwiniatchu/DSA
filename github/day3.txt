package DSA;
class Node {
    int data;
    Node next;
    Node(int data) { this.data = data; }
}

class SinglyLinkedList {
    Node head;

    void insert(int data) {
        Node newNode = new Node(data);
        if (head == null) { head = newNode; return; }
        Node current = head;
        while (current.next != null) current = current.next;
        current.next = newNode;
    }

    void deleteAtPosition(int position) {
        if (head == null) return;
        if (position == 0) { head = head.next; return; }
        Node current = head;
        for (int i = 0; current != null && i < position - 1; i++) current = current.next;
        if (current == null || current.next == null) return;
        current.next = current.next.next;
    }

    void printList() {
        Node current = head;
        while (current != null) { System.out.print(current.data + " -> "); current = current.next; }
        System.out.println("null");
    }
}

public class DeleteFromArray {
    public static void main(String[] args) {
        SinglyLinkedList list = new SinglyLinkedList();
        list.insert(10); list.insert(20); list.insert(30); list.insert(40); list.insert(50);
        list.printList(); 
        list.deleteAtPosition(2); 
        list.printList(); 
    }
}